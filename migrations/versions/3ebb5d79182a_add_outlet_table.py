"""Add outlet table

Revision ID: 3ebb5d79182a
Revises: 
Create Date: 2025-05-18 20:48:00.791089

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3ebb5d79182a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Create the new 'outlet' table
    op.create_table(
        'outlet',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=128), nullable=False),
        sa.Column('favicon_url', sa.String(length=256), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )

    # ⚠️ Drop foreign key constraints BEFORE dropping the tables
    op.drop_constraint('guesses_outlet_id_fkey', 'guesses', type_='foreignkey')
    op.drop_constraint('disputes_outlet_id_fkey', 'disputes', type_='foreignkey')

    # Now it's safe to drop the dependent tables
    op.drop_table('guesses')
    op.drop_table('submissions')
    op.drop_table('disputes')
    op.drop_table('outlets')  # Drop this last after constraints removed

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('disputes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('outlet_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('proposed_bias', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('proposed_establishment', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('comment', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.CheckConstraint('proposed_bias >= 1 AND proposed_bias <= 5', name='disputes_proposed_bias_check'),
    sa.CheckConstraint('proposed_establishment >= 1 AND proposed_establishment <= 5', name='disputes_proposed_establishment_check'),
    sa.ForeignKeyConstraint(['outlet_id'], ['outlets.id'], name='disputes_outlet_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='disputes_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='disputes_pkey')
    )
    op.create_table('submissions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('url', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('status', sa.TEXT(), server_default=sa.text("'pending'::text"), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='submissions_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='submissions_pkey')
    )
    op.create_table('guesses',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('outlet_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('guessed_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('guessed_bias', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('guessed_establishment', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('correct', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['outlet_id'], ['outlets.id'], name='guesses_outlet_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='guesses_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='guesses_pkey')
    )
    op.create_table('outlets',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('favicon_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('bias', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('establishment', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.TEXT()), autoincrement=False, nullable=True),
    sa.CheckConstraint('bias >= 1 AND bias <= 5', name='outlets_bias_check'),
    sa.CheckConstraint('establishment >= 1 AND establishment <= 5', name='outlets_establishment_check'),
    sa.PrimaryKeyConstraint('id', name='outlets_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('points', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('username', name='users_username_key')
    )
    op.drop_table('outlet')
    # ### end Alembic commands ###
